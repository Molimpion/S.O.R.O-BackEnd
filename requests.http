# ===================================================================
# apresentação Geraldo
# API S.O.R.O. BOMBEIROS - Cenário: Incêndio Residencial
# ===================================================================

# --- VARIÁVEIS GLOBAIS ---
@hostname = https://api-bombeiros-s-o-r-o.onrender.com
# @hostname = http://localhost:3000

@adminToken = # Copie o token do teste 1.2 aqui
@analistaToken = # Copie o token do teste 3.2 aqui
@bairroId =
@naturezaId =
@grupoId =
@subgrupoId =
@formaAcervoId =
@grupamentoId =
@unidadeId =
@viaturaId =
@analistaId =
@ocorrenciaId =


# ===================================================================
# FASE 1: SETUP INICIAL E AUTENTICAÇÃO
# ===================================================================

### 1.1 - Cadastrar o usuário ADMIN (Ex: Comandante Silva)
# @name createAdmin
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
    "name": "Comandante Silva",
    "email": "cmd.silva.admin.dia1@bombeiros.pe.gov.br", # Email Único
    "password": "senhaAdminForte123",
    "profile": "ADMIN",
    "matricula": "100001-A" # Matrícula Única
}

### 1.2 - Fazer login como ADMIN
# AÇÃO: Execute e copie o token da resposta para a variável @adminToken acima.
# @name loginAdmin
POST {{hostname}}/api/auth/login
Content-Type: application/json

{
    "email": "cmd.silva.admin.dia1@bombeiros.pe.gov.br",
    "password": "senhaAdminForte123"
}

### 1.3 - Testar Acesso Admin (Listar Usuários)
GET {{hostname}}/api/users
Authorization: Bearer {{adminToken}}


# ===================================================================
# FASE 2: CRIAÇÃO DE DADOS MÍNIMOS DE DEPENDÊNCIA (ADMIN)
# ===================================================================

### 2.1 - POST: Criar Grupamento (Ex: Metropolitano)
# @name createGrupamento
POST {{hostname}}/api/grupamentos
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "nome_grupamento": "Grupamento de Bombeiros Metropolitano", "sigla": "GBM" }

### 2.2 - POST: Criar Unidade Operacional (Ex: Quartel Central)
# @name createUnidade
POST {{hostname}}/api/unidades-operacionais
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "nome_unidade": "Quartel Central do Recife",
    "id_grupamento_fk": "{{createGrupamento.response.body.id_grupamento}}"
}

### 2.3 - POST: Criar Natureza (Ex: Incêndio)
# @name createNatureza
POST {{hostname}}/api/naturezas
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "descricao": "INCENDIO" }

### 2.4 - POST: Criar Grupo (Ex: Incêndio em Edificação)
# @name createGrupo
POST {{hostname}}/api/grupos
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "descricao_grupo": "Incêndio em Edificação",
    "id_natureza_fk": "{{createNatureza.response.body.id_natureza}}"
}

### 2.5 - POST: Criar Subgrupo (Ex: Incêndio em Residência)
# @name createSubgrupo
POST {{hostname}}/api/subgrupos
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "descricao_subgrupo": "Incêndio em Residência Unifamiliar",
    "id_grupo_fk": "{{createGrupo.response.body.id_grupo}}"
}

### 2.6 - POST: Criar Bairro (Ex: Boa Vista)
# @name createBairro
POST {{hostname}}/api/bairros
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "nome_bairro": "BOA VISTA", "regiao": "Central" }

### 2.7 - POST: Criar Forma Acervo (Ex: Telefone 193)
# @name createFormaAcervo
POST {{hostname}}/api/formas-acervo
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "descricao": "TELEFONE 193" }


# ===================================================================
# FASE 3: OCORRÊNCIAS E TESTES OPERACIONAIS
# ===================================================================

### 3.1 - Cadastrar Usuário ANALISTA (Ex: Operador Oliveira)
# @name createAnalista
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
    "name": "Operador Oliveira",
    "email": "op.oliveira.analista.dia1@bombeiros.pe.gov.br", # Email Único
    "password": "senhaAnalistaSegura456",
    "profile": "ANALISTA",
    "matricula": "200002-B", # Matrícula Única
    "id_unidade_operacional_fk": "{{createUnidade.response.body.id_unidade}}"
}

### 3.2 - Login como ANALISTA
# AÇÃO: Copie o token de resposta para a variável @analistaToken acima.
# @name loginAnalista
POST {{hostname}}/api/auth/login
Content-Type: application/json

{
    "email": "op.oliveira.analista.dia1@bombeiros.pe.gov.br",
    "password": "senhaAnalistaSegura456"
}

### 3.3 - POST: Criar Ocorrência (Incêndio Residencial na Boa Vista)
# @name createOcorrencia
POST {{hostname}}/api/ocorrencias
Authorization: Bearer {{analistaToken}}
Content-Type: application/json

{
    "data_acionamento": "2025-10-21T10:15:00Z", # Data/Hora do acionamento
    "hora_acionamento": "2025-10-21T10:15:00Z",
    "nr_aviso": "AV-DIA1-001", # Número de aviso do Dia 1
    "id_subgrupo_fk": "{{createSubgrupo.response.body.id_subgrupo}}",
    "id_bairro_fk": "{{createBairro.response.body.id_bairro}}",
    "id_forma_acervo_fk": "{{createFormaAcervo.response.body.id_forma_acervo}}"
}

### 3.4 - GET: Listar Ocorrências (Pendentes de Hoje)
GET {{hostname}}/api/ocorrencias?status=PENDENTE&dataInicio=2025-10-21T00:00:00Z
Authorization: Bearer {{analistaToken}}

### 3.5 - GET: Detalhes da Ocorrência Criada
# @name getOcorrenciaById
GET {{hostname}}/api/ocorrencias/{{createOcorrencia.response.body.id_ocorrencia}}
Authorization: Bearer {{analistaToken}}


# ===================================================================
# FASE 4: TESTES ANALÍTICOS E DE RELATÓRIOS (ADMIN)
# ===================================================================

### 4.1 - GET: KPI Ocorrências por Status
GET {{hostname}}/api/dashboard/ocorrencias-por-status
Authorization: Bearer {{adminToken}}

### 4.2 - GET: KPI Ocorrências por Bairro (Do Bairro Boa Vista)
GET {{hostname}}/api/dashboard/ocorrencias-por-bairro?bairroId={{createBairro.response.body.id_bairro}}
Authorization: Bearer {{adminToken}}

### 4.3 - GET: Relatório CSV (Ocorrências de Incêndio Pendentes)
GET {{hostname}}/api/relatorios?type=csv&status=PENDENTE&subgrupoId={{createSubgrupo.response.body.id_subgrupo}}
Authorization: Bearer {{adminToken}}

### 4.4 - GET: Relatório PDF (Todas as ocorrências do dia)
GET {{hostname}}/api/relatorios?type=pdf&dataInicio=2025-10-21T00:00:00Z
Authorization: Bearer {{adminToken}}


# ===================================================================
# FASE 5: TESTES CRUD COMPLETO (PUT & DELETE - ADMIN)
# ===================================================================

### 5.1 - PUT: Atualizar Bairro (Adicionar AIS)
# @name updateBairro
PUT {{hostname}}/api/bairros/{{createBairro.response.body.id_bairro}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "nome_bairro": "BOA VISTA", "regiao": "Central", "ais": "AIS 1" }

### 5.2 - PUT: Atualizar Usuário (Adicionar Posto/Grad)
PUT {{hostname}}/api/users/{{createAnalista.response.body.data.id}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "posto_grad": "3º SGT" }


# ===================================================================
# FASE 6: TESTES DE CONFLITO E LIMPEZA (DELETE - ADMIN)
# ===================================================================

### 6.1 - DELETE: Tentar excluir Subgrupo em uso pela ocorrência 3.3
# Resultado esperado: 409 Conflict
DELETE {{hostname}}/api/subgrupos/{{createSubgrupo.response.body.id_subgrupo}}
Authorization: Bearer {{adminToken}}

### 6.2 - DELETE: Tentar excluir Bairro em uso pela ocorrência 3.3
# Resultado esperado: 409 Conflict
DELETE {{hostname}}/api/bairros/{{createBairro.response.body.id_bairro}}
Authorization: Bearer {{adminToken}}

### 6.3 - POST: Criar Grupamento Secundário (Ex: Agreste)
# @name createGrupamento2
POST {{hostname}}/api/grupamentos
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{ "nome_grupamento": "Grupamento de Bombeiros do Agreste", "sigla": "GBA" } # Sigla Única

### 6.4 - DELETE: Deletar Grupamento Secundário (Não está em uso)
# Resultado esperado: 204 No Content
DELETE {{hostname}}/api/grupamentos/{{createGrupamento2.response.body.id_grupamento}}
Authorization: Bearer {{adminToken}}


